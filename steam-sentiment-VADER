import pandas as pd
import random
import numpy as np 

import matplotlib.pyplot as plt
import seaborn as sns

import nltk 
from nltk.sentiment import SentimentIntensityAnalyzer
from tqdm.notebook import tqdm 

plt.style.use('ggplot')

#Dataset from Antoni Sobkowicz. (2017). Steam Review Dataset (2017) [Data set]. Zenodo. https://doi.org/10.5281/zenodo.1000885

#inspired by Rob Mulla: 
# https://www.youtube.com/watch?v=QpzMWQvxXWk 

n = sum(1 for line in open('steam-reviews.csv'))-1  # Calculate number of rows in file
s = n//1000  #sample size of 0.1% (abt. 6,000 reviews) for sake of simplicity
skip = sorted(random.sample(range(1, n+1), n-s))  # n+1 to compensate for header 

#reduces to 0.1% of og size with diff games being reviews
df = pd.read_csv('steam-reviews.csv', skiprows=skip)

#eda
df.insert(0, 'ID', range(0, len(df)))
df["review_score"] = (df["review_score"] == 1).astype(int) #make 1 = pos review 0 = negative review 
df.dropna(inplace = True)


# #VADER model 
# #note, it is a subscore. it does not account for associations between words 

sia = SentimentIntensityAnalyzer()

res = {}
for i, row in tqdm(df.iterrows(), total = len(df)):

    review = row['review_text']
    id = row['ID']
    res[id] = sia.polarity_scores(review)

#sentiment score + meta data 
vaders = pd.DataFrame(res).T
vaders.reset_index().rename(columns={'index' : 'Id'})
vaders = vaders.merge(df, left_index=True, right_index=True)

#plot vader results
ax = sns.barplot(data=vaders, x = 'review_score', y = 'compound')
ax.set_title('Compound Score for Steam Reviews')
plt.show()

fig, axs = plt.subplots(1,3, figsize=(15,3))

sns.barplot(data=vaders, x='review_score', y = 'pos', ax=axs[0])
sns.barplot(data=vaders, x='review_score', y = 'neu', ax=axs[1])
sns.barplot(data=vaders, x='review_score', y = 'neg', ax=axs[2])

axs[0].set_title('Pos')
axs[1].set_title('Neu')
axs[2].set_title('Neg')
plt.tight_layout()

plt.show()